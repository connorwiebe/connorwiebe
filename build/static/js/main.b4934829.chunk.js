(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,t){e.exports=[{url:"https://jsjot.com/",title:"jsjot",date:"Apr 20, 2018",image:"https://i.imgur.com/SY3rRwP.png",description:"Fast, minimal Javascript console logger for code tinkering. I made this for one of my final assignments in a Javascript course in college.\n    I wanted a simple, quick way to test Javascript snippets and I wasn't satisfied with the existing solutions. It is a Single Page Application that leverages\n    the Codemirror library for all the syntax highlighting and indentation and Websockets for real time collaboration. The technologies used are: React, Webpack,\n    Node.js, Express, Websockets, Sass, LocalStorage. The server uses Ubuntu with PM2, clustering, SSL certification, HTTP/2."},{url:"https://dreambounty.com/",title:"dreambounty",date:"Feb 20, 2018",image:"https://i.imgur.com/0CnqIjI.png",description:"Crowdfunding platform for supporting the creation of content that you want to see content creators produce.\n  It's a fully functioning website that I created for my capstone project in college. It combined many of the skills I learned up to that point. It features\n  OAuth authentication, Stripe integration, a relational database with plpgsql procedures, transactions, foreign keys, sessions, Google Analytics, Promises,\n  error reporting. It was built using: Node.js, Express, Postgresql, Redis, Pug, Stripe."},{url:"https://status123.herokuapp.com/",title:"status",date:"Jan 20, 2018",image:"https://i.imgur.com/Qaz8UF2.png",description:"Receive email notifications when a Reddit post is created matching a specific word or phrase. I used the Reddit API to search subreddits for\n    matching words and send the emails using Sendgrid. I used Redis to rate limit the daily number of emails allowed per user. Created using: React, Node.js,\n    Express, Redis."},{url:"https://podjunky.herokuapp.com/",title:"podjunky",date:"Nov 18, 2017",image:"https://i.imgur.com/YqWXX2N.png",description:"Streamlined listening for podcast junkies. Firebase, Node.js, Express, jQuery, Pug. It pulls podcast data from the iTunes RSS feed and saves\n    subscriptions in Google's Firebase data store."},{url:"https://phloot.herokuapp.com/",title:"phloot",date:"Oct 2, 2017",image:"https://i.imgur.com/QN3TYIC.png",description:"Recommends songs for you based on artists you like. One of the first projects I created at the start of my education using Node.js, Express, Pug.\n    It works by plugging into the Last.fm API and randomly selecting similar artists' songs."},{url:"https://www.npmjs.com/package/crypto-alphanumeric-id",title:"crypto-alphanumeric-id",date:"Dec 11, 2016",image:"https://i.imgur.com/2oVCO96.png",description:"Generate cryptographic, alphanumeric, base62 strings of a given length. I kept finding myself needing a module that did only this, and it didn't\n    exist, so I created it."}]},function(e,t,a){e.exports=a(5)},function(e,t,a){"use strict";a.r(t);var i=a(0),s=a.n(i),n=a(2),o=a.n(n),r=a(3),c=a.n(r),l=(a(11),document.getElementById("app"));o.a.render(s.a.createElement(function(){var e=c.a.map(function(e,t){return s.a.createElement("div",{key:t,className:"Container"},s.a.createElement("div",{className:"Project"},s.a.createElement("div",{className:"info"},s.a.createElement("h3",{className:"title"},s.a.createElement("a",{href:e.url},e.title)),s.a.createElement("p",{className:"details"},e.description)),s.a.createElement("div",{className:"image"},s.a.createElement("img",{src:e.image,alt:e.title}))))});return s.a.createElement("div",{className:"wrapper"},s.a.createElement("div",{className:"Name"},s.a.createElement("h1",{className:"title"},"Connor Wiebe"),s.a.createElement("div",{className:"Contact"},s.a.createElement("a",{href:"https://github.com/connorwiebe",className:"item"},"Github\xa0/"),s.a.createElement("a",{href:"mailto:connorwiebe11@gmail.com",className:"item"},"\xa0Email"))),s.a.createElement("div",{className:"Projects"},e))},null),l)},,,,,,function(e,t,a){}],[[4,1,2]]]);
//# sourceMappingURL=main.b4934829.chunk.js.map